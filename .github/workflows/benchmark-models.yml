name: AI Model Benchmark

on:
  workflow_dispatch:
    inputs:
      benchmark_type:
        description: 'Type of benchmark to run'
        required: true
        default: 'comprehensive'
        type: choice
        options:
        - comprehensive
        - quick
        - security-focused

permissions:
  contents: read
  pull-requests: write

jobs:
  # GPT-4 Turbo Benchmark
  gpt4-turbo:
    runs-on: ubuntu-latest
    name: "GPT-4 Turbo Review"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          cd .github/actions/ai-pr-reviewer
          npm ci --ignore-scripts

      - name: Run GPT-4 Turbo Review
        uses: ./.github/actions/ai-pr-reviewer
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          provider: "openai"
          model: "gpt-4-turbo"
          max-tokens: "3000"
          temperature: "0.2"
          include-tests: "true"
          include-style: "true"
          inline-comments: "true"
          max-inline-comments: "20"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # GPT-4o Benchmark
  gpt4o:
    runs-on: ubuntu-latest
    name: "GPT-4o Review"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          cd .github/actions/ai-pr-reviewer
          npm ci --ignore-scripts

      - name: Run GPT-4o Review
        uses: ./.github/actions/ai-pr-reviewer
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          provider: "openai"
          model: "gpt-4o"
          max-tokens: "3000"
          temperature: "0.2"
          include-tests: "true"
          include-style: "true"
          inline-comments: "true"
          max-inline-comments: "20"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # GPT-4o Mini Benchmark
  gpt4o-mini:
    runs-on: ubuntu-latest
    name: "GPT-4o Mini Review"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          cd .github/actions/ai-pr-reviewer
          npm ci --ignore-scripts

      - name: Run GPT-4o Mini Review
        uses: ./.github/actions/ai-pr-reviewer
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          provider: "openai"
          model: "gpt-4o-mini"
          max-tokens: "3000"
          temperature: "0.2"
          include-tests: "true"
          include-style: "true"
          inline-comments: "true"
          max-inline-comments: "20"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # o1-preview Benchmark
  o1-preview:
    runs-on: ubuntu-latest
    name: "o1-preview Review"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          cd .github/actions/ai-pr-reviewer
          npm ci --ignore-scripts

      - name: Run o1-preview Review
        uses: ./.github/actions/ai-pr-reviewer
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          provider: "openai"
          model: "o1-preview"
          max-tokens: "3000"
          temperature: "0.1"  # Lower for reasoning models
          include-tests: "true"
          include-style: "true"
          inline-comments: "true"
          max-inline-comments: "20"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # o1-mini Benchmark
  o1-mini:
    runs-on: ubuntu-latest
    name: "o1-mini Review"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          cd .github/actions/ai-pr-reviewer
          npm ci --ignore-scripts

      - name: Run o1-mini Review
        uses: ./.github/actions/ai-pr-reviewer
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          provider: "openai"
          model: "o1-mini"
          max-tokens: "3000"
          temperature: "0.1"  # Lower for reasoning models
          include-tests: "true"
          include-style: "true"
          inline-comments: "true"
          max-inline-comments: "20"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # Benchmark Analysis
  analyze-results:
    runs-on: ubuntu-latest
    name: "Analyze Benchmark Results"
    needs: [gpt4-turbo, gpt4o, gpt4o-mini, o1-preview, o1-mini]
    if: always()
    steps:
      - name: Create Benchmark Summary
        run: |
          echo "# 🎯 AI Model Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Models Tested:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ GPT-4 Turbo: ${{ needs.gpt4-turbo.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ GPT-4o: ${{ needs.gpt4o.result }}" >> $GITHUB_STEP_SUMMARY  
          echo "- ✅ GPT-4o Mini: ${{ needs.gpt4o-mini.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ o1-preview: ${{ needs.o1-preview.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ o1-mini: ${{ needs.o1-mini.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test File:" >> $GITHUB_STEP_SUMMARY
          echo "- **File**: \`src/benchmark-test.ts\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Issues**: 27+ intentional security, performance, and quality issues" >> $GITHUB_STEP_SUMMARY
          echo "- **Categories**: SQL injection, XSS, hardcoded secrets, race conditions, memory leaks, etc." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Analysis:" >> $GITHUB_STEP_SUMMARY
          echo "Review the PR comments from each model to compare:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 **Detection Rate**: How many issues were found" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 **Accuracy**: Quality of issue identification" >> $GITHUB_STEP_SUMMARY
          echo "- 💡 **Solution Quality**: Helpfulness of suggested fixes" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 **Performance**: Speed and token efficiency" >> $GITHUB_STEP_SUMMARY